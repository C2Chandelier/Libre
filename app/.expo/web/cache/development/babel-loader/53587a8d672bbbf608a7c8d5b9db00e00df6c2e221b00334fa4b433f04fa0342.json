{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContext, NavigationRouteContext } from '@react-navigation/native';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaFrame, useSafeAreaInsets } from 'react-native-safe-area-context';\nimport Background from \"./Background\";\nimport getDefaultHeaderHeight from \"./Header/getDefaultHeaderHeight\";\nimport HeaderHeightContext from \"./Header/HeaderHeightContext\";\nimport HeaderShownContext from \"./Header/HeaderShownContext\";\nexport default function Screen(props) {\n  var dimensions = useSafeAreaFrame();\n  var insets = useSafeAreaInsets();\n  var isParentHeaderShown = React.useContext(HeaderShownContext);\n  var parentHeaderHeight = React.useContext(HeaderHeightContext);\n  var focused = props.focused,\n    _props$modal = props.modal,\n    modal = _props$modal === void 0 ? false : _props$modal,\n    header = props.header,\n    _props$headerShown = props.headerShown,\n    headerShown = _props$headerShown === void 0 ? true : _props$headerShown,\n    headerTransparent = props.headerTransparent,\n    _props$headerStatusBa = props.headerStatusBarHeight,\n    headerStatusBarHeight = _props$headerStatusBa === void 0 ? isParentHeaderShown ? 0 : insets.top : _props$headerStatusBa,\n    navigation = props.navigation,\n    route = props.route,\n    children = props.children,\n    style = props.style;\n  var _React$useState = React.useState(function () {\n      return getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight);\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    headerHeight = _React$useState2[0],\n    setHeaderHeight = _React$useState2[1];\n  return React.createElement(Background, {\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    style: [styles.container, style]\n  }, React.createElement(View, {\n    style: styles.content\n  }, React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || headerShown !== false\n  }, React.createElement(HeaderHeightContext.Provider, {\n    value: headerShown ? headerHeight : parentHeaderHeight != null ? parentHeaderHeight : 0\n  }, children))), headerShown ? React.createElement(NavigationContext.Provider, {\n    value: navigation\n  }, React.createElement(NavigationRouteContext.Provider, {\n    value: route\n  }, React.createElement(View, {\n    onLayout: function onLayout(e) {\n      var height = e.nativeEvent.layout.height;\n      setHeaderHeight(height);\n    },\n    style: headerTransparent ? styles.absolute : null\n  }, header))) : null);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  content: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}