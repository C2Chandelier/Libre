{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport fetchRetry from \"fetch-retry\";\nimport { apiURL } from \"../config\";\nvar fetch = window.fetch;\nvar api = function () {\n  function api() {\n    _classCallCheck(this, api);\n    this.token = \"\";\n  }\n  _createClass(api, [{\n    key: \"goToAuth\",\n    value: function goToAuth(navigation) {\n      var _navigation$route;\n      if ((navigation == null ? void 0 : (_navigation$route = navigation.route) == null ? void 0 : _navigation$route.name) !== \"Auth\") {\n        return navigation.navigate(\"Auth\", {\n          disconnected: 1\n        });\n      }\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return this.token;\n    }\n  }, {\n    key: \"setToken\",\n    value: function setToken(token) {\n      this.token = token;\n    }\n  }, {\n    key: \"checkToken\",\n    value: function checkToken() {\n      var _this = this;\n      return new Promise(function () {\n        var _ref = _asyncToGenerator(function* (resolve, reject) {\n          try {\n            var response = yield fetch(`${apiURL}/user/signin_token`, {\n              retries: 3,\n              retryDelay: 1000,\n              retryOn: [502, 503, 504],\n              mode: \"cors\",\n              method: \"GET\",\n              credentials: \"include\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${_this.token}`\n              }\n            });\n            var res = yield response.json();\n            resolve(res);\n          } catch (e) {\n            console.log(e);\n            reject(e);\n          }\n        });\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"get\",\n    value: function get(path, navigation) {\n      var _this2 = this;\n      return new Promise(function () {\n        var _ref2 = _asyncToGenerator(function* (resolve, reject) {\n          try {\n            var response = yield fetch(`${apiURL}${path}`, {\n              retries: 3,\n              retryDelay: 1000,\n              retryOn: [502, 503, 504],\n              mode: \"cors\",\n              method: \"GET\",\n              credentials: \"include\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${_this2.token}`\n              }\n            });\n            if (response.status === 401) {\n              var _navigation$route2;\n              if ((navigation == null ? void 0 : (_navigation$route2 = navigation.route) == null ? void 0 : _navigation$route2.name) !== \"Auth\") {\n                navigation.navigate(\"Auth\", {\n                  disconnected: 1\n                });\n                return;\n              }\n            }\n            var res = yield response.json();\n            resolve(res);\n          } catch (e) {\n            reject(e);\n          }\n        });\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"put\",\n    value: function put(path, body, navigation) {\n      var _this3 = this;\n      return new Promise(function () {\n        var _ref3 = _asyncToGenerator(function* (resolve, reject) {\n          try {\n            var response = yield fetch(`${apiURL}${path}`, {\n              retries: 3,\n              retryDelay: 1000,\n              retryOn: [502, 503, 504],\n              mode: \"cors\",\n              method: \"PUT\",\n              credentials: \"include\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${_this3.token}`\n              },\n              body: typeof body === \"string\" ? body : JSON.stringify(body)\n            });\n            if (response.status === 401) {\n              var _navigation$route3;\n              if ((navigation == null ? void 0 : (_navigation$route3 = navigation.route) == null ? void 0 : _navigation$route3.name) !== \"Auth\") {\n                navigation.navigate(\"Auth\", {\n                  disconnected: 1\n                });\n                return;\n              }\n            }\n            var res = yield response.json();\n            resolve(res);\n          } catch (e) {\n            reject(e);\n          }\n        });\n        return function (_x5, _x6) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(path, navigation) {\n      var _this4 = this;\n      return new Promise(function () {\n        var _ref4 = _asyncToGenerator(function* (resolve, reject) {\n          try {\n            var response = yield fetch(`${apiURL}${path}`, {\n              retries: 3,\n              retryDelay: 1000,\n              retryOn: [502, 503, 504],\n              mode: \"cors\",\n              credentials: \"include\",\n              method: \"DELETE\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${_this4.token}`\n              }\n            });\n            if (response.status === 401) {\n              var _navigation$route4;\n              if ((navigation == null ? void 0 : (_navigation$route4 = navigation.route) == null ? void 0 : _navigation$route4.name) !== \"Auth\") {\n                navigation.navigate(\"Auth\", {\n                  disconnected: 1\n                });\n                return;\n              }\n            }\n            var res = yield response.json();\n            resolve(res);\n          } catch (e) {\n            reject(e);\n          }\n        });\n        return function (_x7, _x8) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"post\",\n    value: function post(path, body, navigation) {\n      var _this5 = this;\n      return new Promise(function () {\n        var _ref5 = _asyncToGenerator(function* (resolve, reject) {\n          try {\n            var response = yield fetch(`${apiURL}${path}`, {\n              retries: 3,\n              retryDelay: 1000,\n              retryOn: [502, 503, 504],\n              mode: \"cors\",\n              method: \"POST\",\n              credentials: \"include\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${_this5.token}`\n              },\n              body: typeof body === \"string\" ? body : JSON.stringify(body)\n            });\n            if (response.status === 401) {\n              var _navigation$route5;\n              if ((navigation == null ? void 0 : (_navigation$route5 = navigation.route) == null ? void 0 : _navigation$route5.name) !== \"Auth\") {\n                navigation.navigate(\"Auth\", {\n                  disconnected: 1\n                });\n                return;\n              }\n            }\n            var res = yield response.json();\n            if (response.status !== 200) {\n              return reject(res);\n            }\n            resolve(res);\n          } catch (e) {\n            console.log(e, {\n              extra: {\n                path: path,\n                body: body\n              }\n            });\n            reject(e);\n          }\n        });\n        return function (_x9, _x10) {\n          return _ref5.apply(this, arguments);\n        };\n      }());\n    }\n  }]);\n  return api;\n}();\nfunction initApi() {\n  fetch = fetchRetry(window.fetch);\n}\nvar API = new api();\nexport default API;\nexport { initApi };","map":{"version":3,"names":["fetchRetry","apiURL","fetch","window","api","_classCallCheck","token","_createClass","key","value","goToAuth","navigation","_navigation$route","route","name","navigate","disconnected","getToken","setToken","checkToken","_this","Promise","_ref","_asyncToGenerator","resolve","reject","response","retries","retryDelay","retryOn","mode","method","credentials","headers","Authorization","res","json","e","console","log","_x","_x2","apply","arguments","get","path","_this2","_ref2","status","_navigation$route2","_x3","_x4","put","body","_this3","_ref3","JSON","stringify","_navigation$route3","_x5","_x6","remove","_this4","_ref4","_navigation$route4","_x7","_x8","post","_this5","_ref5","_navigation$route5","extra","_x9","_x10","initApi","API"],"sources":["/Users/charlelie/projects/new/app/src/services/api.js"],"sourcesContent":["import fetchRetry from \"fetch-retry\";\nimport { apiURL } from \"../config\";\n\nlet fetch = window.fetch;\n\nclass api {\n  constructor() {\n    this.token = \"\";\n  }\n\n  goToAuth(navigation) {\n    if (navigation?.route?.name !== \"Auth\") {\n      return navigation.navigate(\"Auth\", { disconnected: 1 });\n    }\n  }\n  getToken() {\n    return this.token;\n  }\n\n  setToken(token) {\n    this.token = token;\n  }\n\n  checkToken() {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await fetch(`${apiURL}/user/signin_token`, {\n          retries: 3,\n          retryDelay: 1000,\n          retryOn: [502, 503, 504],\n          mode: \"cors\",\n          method: \"GET\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `JWT ${this.token}`,\n          },\n        });\n        const res = await response.json();\n        resolve(res);\n      } catch (e) {\n        console.log(e);\n        reject(e);\n      }\n    });\n  }\n\n  get(path, navigation) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await fetch(`${apiURL}${path}`, {\n          retries: 3,\n          retryDelay: 1000,\n          retryOn: [502, 503, 504],\n          mode: \"cors\",\n          method: \"GET\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `JWT ${this.token}`,\n          },\n        });\n        if (response.status === 401) {\n          if (navigation?.route?.name !== \"Auth\") {\n            navigation.navigate(\"Auth\", { disconnected: 1 });\n            return;\n          }\n        }\n        const res = await response.json();\n        resolve(res);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  put(path, body, navigation) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await fetch(`${apiURL}${path}`, {\n          retries: 3,\n          retryDelay: 1000,\n          retryOn: [502, 503, 504],\n          mode: \"cors\",\n          method: \"PUT\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `JWT ${this.token}`,\n          },\n          body: typeof body === \"string\" ? body : JSON.stringify(body),\n        });\n        if (response.status === 401) {\n          if (navigation?.route?.name !== \"Auth\") {\n            navigation.navigate(\"Auth\", { disconnected: 1 });\n            return;\n          }\n        }\n        const res = await response.json();\n        resolve(res);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  remove(path, navigation) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await fetch(`${apiURL}${path}`, {\n          retries: 3,\n          retryDelay: 1000,\n          retryOn: [502, 503, 504],\n          mode: \"cors\",\n          credentials: \"include\",\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `JWT ${this.token}`,\n          },\n        });\n        if (response.status === 401) {\n          if (navigation?.route?.name !== \"Auth\") {\n            navigation.navigate(\"Auth\", { disconnected: 1 });\n            return;\n          }\n        }\n        const res = await response.json();\n        resolve(res);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  post(path, body, navigation) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await fetch(`${apiURL}${path}`, {\n          retries: 3,\n          retryDelay: 1000,\n          retryOn: [502, 503, 504],\n          mode: \"cors\",\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `JWT ${this.token}`,\n          },\n          body: typeof body === \"string\" ? body : JSON.stringify(body),\n        });\n        if (response.status === 401) {\n          if (navigation?.route?.name !== \"Auth\") {\n            navigation.navigate(\"Auth\", { disconnected: 1 });\n            return;\n          }\n        }\n        const res = await response.json();\n        if (response.status !== 200) {\n          return reject(res);\n        }\n        resolve(res);\n      } catch (e) {\n        console.log(e, { extra: { path: path, body: body } });\n        reject(e);\n      }\n    });\n  }\n}\nfunction initApi() {\n  fetch = fetchRetry(window.fetch);\n}\n\nconst API = new api();\nexport default API;\n\nexport { initApi };\n"],"mappings":";;;AAAA,OAAOA,UAAU,MAAM,aAAa;AACpC,SAASC,MAAM;AAEf,IAAIC,KAAK,GAAGC,MAAM,CAACD,KAAK;AAAC,IAEnBE,GAAG;EACP,SAAAA,IAAA,EAAc;IAAAC,eAAA,OAAAD,GAAA;IACZ,IAAI,CAACE,KAAK,GAAG,EAAE;EACjB;EAACC,YAAA,CAAAH,GAAA;IAAAI,GAAA;IAAAC,KAAA,EAED,SAAAC,SAASC,UAAU,EAAE;MAAA,IAAAC,iBAAA;MACnB,IAAI,CAAAD,UAAU,qBAAAC,iBAAA,GAAVD,UAAU,CAAEE,KAAK,qBAAjBD,iBAAA,CAAmBE,IAAI,MAAK,MAAM,EAAE;QACtC,OAAOH,UAAU,CAACI,QAAQ,CAAC,MAAM,EAAE;UAAEC,YAAY,EAAE;QAAE,CAAC,CAAC;MACzD;IACF;EAAC;IAAAR,GAAA;IAAAC,KAAA,EACD,SAAAQ,SAAA,EAAW;MACT,OAAO,IAAI,CAACX,KAAK;IACnB;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAED,SAAAS,SAASZ,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAED,SAAAU,WAAA,EAAa;MAAA,IAAAC,KAAA;MACX,OAAO,IAAIC,OAAO;QAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAC,WAAOC,OAAO,EAAEC,MAAM,EAAK;UAC5C,IAAI;YACF,IAAMC,QAAQ,SAASxB,KAAK,CAAE,GAAED,MAAO,oBAAmB,EAAE;cAC1D0B,OAAO,EAAE,CAAC;cACVC,UAAU,EAAE,IAAI;cAChBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;cACxBC,IAAI,EAAE,MAAM;cACZC,MAAM,EAAE,KAAK;cACbC,WAAW,EAAE,SAAS;cACtBC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAG,OAAMd,KAAI,CAACd,KAAM;cACnC;YACF,CAAC,CAAC;YACF,IAAM6B,GAAG,SAAST,QAAQ,CAACU,IAAI,CAAC,CAAC;YACjCZ,OAAO,CAACW,GAAG,CAAC;UACd,CAAC,CAAC,OAAOE,CAAC,EAAE;YACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;YACdZ,MAAM,CAACY,CAAC,CAAC;UACX;QACF,CAAC;QAAA,iBAAAG,EAAA,EAAAC,GAAA;UAAA,OAAAnB,IAAA,CAAAoB,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IACJ;EAAC;IAAAnC,GAAA;IAAAC,KAAA,EAED,SAAAmC,IAAIC,IAAI,EAAElC,UAAU,EAAE;MAAA,IAAAmC,MAAA;MACpB,OAAO,IAAIzB,OAAO;QAAA,IAAA0B,KAAA,GAAAxB,iBAAA,CAAC,WAAOC,OAAO,EAAEC,MAAM,EAAK;UAC5C,IAAI;YACF,IAAMC,QAAQ,SAASxB,KAAK,CAAE,GAAED,MAAO,GAAE4C,IAAK,EAAC,EAAE;cAC/ClB,OAAO,EAAE,CAAC;cACVC,UAAU,EAAE,IAAI;cAChBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;cACxBC,IAAI,EAAE,MAAM;cACZC,MAAM,EAAE,KAAK;cACbC,WAAW,EAAE,SAAS;cACtBC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAG,OAAMY,MAAI,CAACxC,KAAM;cACnC;YACF,CAAC,CAAC;YACF,IAAIoB,QAAQ,CAACsB,MAAM,KAAK,GAAG,EAAE;cAAA,IAAAC,kBAAA;cAC3B,IAAI,CAAAtC,UAAU,qBAAAsC,kBAAA,GAAVtC,UAAU,CAAEE,KAAK,qBAAjBoC,kBAAA,CAAmBnC,IAAI,MAAK,MAAM,EAAE;gBACtCH,UAAU,CAACI,QAAQ,CAAC,MAAM,EAAE;kBAAEC,YAAY,EAAE;gBAAE,CAAC,CAAC;gBAChD;cACF;YACF;YACA,IAAMmB,GAAG,SAAST,QAAQ,CAACU,IAAI,CAAC,CAAC;YACjCZ,OAAO,CAACW,GAAG,CAAC;UACd,CAAC,CAAC,OAAOE,CAAC,EAAE;YACVZ,MAAM,CAACY,CAAC,CAAC;UACX;QACF,CAAC;QAAA,iBAAAa,GAAA,EAAAC,GAAA;UAAA,OAAAJ,KAAA,CAAAL,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IACJ;EAAC;IAAAnC,GAAA;IAAAC,KAAA,EAED,SAAA2C,IAAIP,IAAI,EAAEQ,IAAI,EAAE1C,UAAU,EAAE;MAAA,IAAA2C,MAAA;MAC1B,OAAO,IAAIjC,OAAO;QAAA,IAAAkC,KAAA,GAAAhC,iBAAA,CAAC,WAAOC,OAAO,EAAEC,MAAM,EAAK;UAC5C,IAAI;YACF,IAAMC,QAAQ,SAASxB,KAAK,CAAE,GAAED,MAAO,GAAE4C,IAAK,EAAC,EAAE;cAC/ClB,OAAO,EAAE,CAAC;cACVC,UAAU,EAAE,IAAI;cAChBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;cACxBC,IAAI,EAAE,MAAM;cACZC,MAAM,EAAE,KAAK;cACbC,WAAW,EAAE,SAAS;cACtBC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAG,OAAMoB,MAAI,CAAChD,KAAM;cACnC,CAAC;cACD+C,IAAI,EAAE,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACJ,IAAI;YAC7D,CAAC,CAAC;YACF,IAAI3B,QAAQ,CAACsB,MAAM,KAAK,GAAG,EAAE;cAAA,IAAAU,kBAAA;cAC3B,IAAI,CAAA/C,UAAU,qBAAA+C,kBAAA,GAAV/C,UAAU,CAAEE,KAAK,qBAAjB6C,kBAAA,CAAmB5C,IAAI,MAAK,MAAM,EAAE;gBACtCH,UAAU,CAACI,QAAQ,CAAC,MAAM,EAAE;kBAAEC,YAAY,EAAE;gBAAE,CAAC,CAAC;gBAChD;cACF;YACF;YACA,IAAMmB,GAAG,SAAST,QAAQ,CAACU,IAAI,CAAC,CAAC;YACjCZ,OAAO,CAACW,GAAG,CAAC;UACd,CAAC,CAAC,OAAOE,CAAC,EAAE;YACVZ,MAAM,CAACY,CAAC,CAAC;UACX;QACF,CAAC;QAAA,iBAAAsB,GAAA,EAAAC,GAAA;UAAA,OAAAL,KAAA,CAAAb,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IACJ;EAAC;IAAAnC,GAAA;IAAAC,KAAA,EAED,SAAAoD,OAAOhB,IAAI,EAAElC,UAAU,EAAE;MAAA,IAAAmD,MAAA;MACvB,OAAO,IAAIzC,OAAO;QAAA,IAAA0C,KAAA,GAAAxC,iBAAA,CAAC,WAAOC,OAAO,EAAEC,MAAM,EAAK;UAC5C,IAAI;YACF,IAAMC,QAAQ,SAASxB,KAAK,CAAE,GAAED,MAAO,GAAE4C,IAAK,EAAC,EAAE;cAC/ClB,OAAO,EAAE,CAAC;cACVC,UAAU,EAAE,IAAI;cAChBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;cACxBC,IAAI,EAAE,MAAM;cACZE,WAAW,EAAE,SAAS;cACtBD,MAAM,EAAE,QAAQ;cAChBE,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAG,OAAM4B,MAAI,CAACxD,KAAM;cACnC;YACF,CAAC,CAAC;YACF,IAAIoB,QAAQ,CAACsB,MAAM,KAAK,GAAG,EAAE;cAAA,IAAAgB,kBAAA;cAC3B,IAAI,CAAArD,UAAU,qBAAAqD,kBAAA,GAAVrD,UAAU,CAAEE,KAAK,qBAAjBmD,kBAAA,CAAmBlD,IAAI,MAAK,MAAM,EAAE;gBACtCH,UAAU,CAACI,QAAQ,CAAC,MAAM,EAAE;kBAAEC,YAAY,EAAE;gBAAE,CAAC,CAAC;gBAChD;cACF;YACF;YACA,IAAMmB,GAAG,SAAST,QAAQ,CAACU,IAAI,CAAC,CAAC;YACjCZ,OAAO,CAACW,GAAG,CAAC;UACd,CAAC,CAAC,OAAOE,CAAC,EAAE;YACVZ,MAAM,CAACY,CAAC,CAAC;UACX;QACF,CAAC;QAAA,iBAAA4B,GAAA,EAAAC,GAAA;UAAA,OAAAH,KAAA,CAAArB,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IACJ;EAAC;IAAAnC,GAAA;IAAAC,KAAA,EAED,SAAA0D,KAAKtB,IAAI,EAAEQ,IAAI,EAAE1C,UAAU,EAAE;MAAA,IAAAyD,MAAA;MAC3B,OAAO,IAAI/C,OAAO;QAAA,IAAAgD,KAAA,GAAA9C,iBAAA,CAAC,WAAOC,OAAO,EAAEC,MAAM,EAAK;UAC5C,IAAI;YACF,IAAMC,QAAQ,SAASxB,KAAK,CAAE,GAAED,MAAO,GAAE4C,IAAK,EAAC,EAAE;cAC/ClB,OAAO,EAAE,CAAC;cACVC,UAAU,EAAE,IAAI;cAChBC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;cACxBC,IAAI,EAAE,MAAM;cACZC,MAAM,EAAE,MAAM;cACdC,WAAW,EAAE,SAAS;cACtBC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClCC,aAAa,EAAG,OAAMkC,MAAI,CAAC9D,KAAM;cACnC,CAAC;cACD+C,IAAI,EAAE,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACJ,IAAI;YAC7D,CAAC,CAAC;YACF,IAAI3B,QAAQ,CAACsB,MAAM,KAAK,GAAG,EAAE;cAAA,IAAAsB,kBAAA;cAC3B,IAAI,CAAA3D,UAAU,qBAAA2D,kBAAA,GAAV3D,UAAU,CAAEE,KAAK,qBAAjByD,kBAAA,CAAmBxD,IAAI,MAAK,MAAM,EAAE;gBACtCH,UAAU,CAACI,QAAQ,CAAC,MAAM,EAAE;kBAAEC,YAAY,EAAE;gBAAE,CAAC,CAAC;gBAChD;cACF;YACF;YACA,IAAMmB,GAAG,SAAST,QAAQ,CAACU,IAAI,CAAC,CAAC;YACjC,IAAIV,QAAQ,CAACsB,MAAM,KAAK,GAAG,EAAE;cAC3B,OAAOvB,MAAM,CAACU,GAAG,CAAC;YACpB;YACAX,OAAO,CAACW,GAAG,CAAC;UACd,CAAC,CAAC,OAAOE,CAAC,EAAE;YACVC,OAAO,CAACC,GAAG,CAACF,CAAC,EAAE;cAAEkC,KAAK,EAAE;gBAAE1B,IAAI,EAAEA,IAAI;gBAAEQ,IAAI,EAAEA;cAAK;YAAE,CAAC,CAAC;YACrD5B,MAAM,CAACY,CAAC,CAAC;UACX;QACF,CAAC;QAAA,iBAAAmC,GAAA,EAAAC,IAAA;UAAA,OAAAJ,KAAA,CAAA3B,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IACJ;EAAC;EAAA,OAAAvC,GAAA;AAAA;AAEH,SAASsE,OAAOA,CAAA,EAAG;EACjBxE,KAAK,GAAGF,UAAU,CAACG,MAAM,CAACD,KAAK,CAAC;AAClC;AAEA,IAAMyE,GAAG,GAAG,IAAIvE,GAAG,CAAC,CAAC;AACrB,eAAeuE,GAAG;AAElB,SAASD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}