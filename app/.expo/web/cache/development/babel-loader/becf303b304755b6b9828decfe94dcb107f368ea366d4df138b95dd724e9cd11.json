{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"get\", \"request\"];\nimport { useCallback, useEffect, useRef, useState } from 'react';\nfunction usePermission(methods, options) {\n  var isMounted = useRef(true);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  var _ref = options || {},\n    _ref$get = _ref.get,\n    get = _ref$get === void 0 ? true : _ref$get,\n    _ref$request = _ref.request,\n    request = _ref$request === void 0 ? false : _ref$request,\n    permissionOptions = _objectWithoutProperties(_ref, _excluded);\n  var getPermission = useCallback(_asyncToGenerator(function* () {\n    var response = yield methods.getMethod(Object.keys(permissionOptions).length > 0 ? permissionOptions : undefined);\n    if (isMounted.current) setStatus(response);\n    return response;\n  }), [methods.getMethod]);\n  var requestPermission = useCallback(_asyncToGenerator(function* () {\n    var response = yield methods.requestMethod(Object.keys(permissionOptions).length > 0 ? permissionOptions : undefined);\n    if (isMounted.current) setStatus(response);\n    return response;\n  }), [methods.requestMethod]);\n  useEffect(function runMethods() {\n    if (request) requestPermission();\n    if (!request && get) getPermission();\n  }, [get, request, requestPermission, getPermission]);\n  useEffect(function didMount() {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return [status, requestPermission, getPermission];\n}\nexport function createPermissionHook(methods) {\n  return function (options) {\n    return usePermission(methods, options);\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}