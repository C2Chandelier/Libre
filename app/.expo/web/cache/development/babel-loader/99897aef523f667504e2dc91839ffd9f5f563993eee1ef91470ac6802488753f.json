{"ast":null,"code":"import React from 'react';\nimport { noop } from \"../utils/func\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LoggerContext = React.createContext({\n  log: noop\n});\nfunction LoggerProvider(_ref) {\n  var children = _ref.children,\n    _ref$enableLogs = _ref.enableLogs,\n    enableLogs = _ref$enableLogs === void 0 ? false : _ref$enableLogs;\n  var log = React.useCallback(function () {\n    if (enableLogs) {\n      var _console;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_console = console).log.apply(_console, ['Toast:'].concat(args));\n    }\n  }, [enableLogs]);\n  var value = {\n    log: log\n  };\n  return _jsx(LoggerContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nfunction useLogger() {\n  var ctx = React.useContext(LoggerContext);\n  return ctx;\n}\nexport { LoggerProvider, useLogger };","map":{"version":3,"names":["React","noop","jsx","_jsx","LoggerContext","createContext","log","LoggerProvider","_ref","children","_ref$enableLogs","enableLogs","useCallback","_console","_len","arguments","length","args","Array","_key","console","apply","concat","value","Provider","useLogger","ctx","useContext"],"sources":["/Users/charlelie/projects/new/app/node_modules/react-native-toast-message/lib/src/contexts/LoggerContext.js"],"sourcesContent":["import React from 'react';\nimport { noop } from '../utils/func';\nconst LoggerContext = React.createContext({\n    log: noop\n});\nfunction LoggerProvider({ children, enableLogs = false }) {\n    const log = React.useCallback((...args) => {\n        if (enableLogs) {\n            // eslint-disable-next-line no-console\n            console.log('Toast:', ...args);\n        }\n    }, [enableLogs]);\n    const value = {\n        log\n    };\n    return (<LoggerContext.Provider value={value}>{children}</LoggerContext.Provider>);\n}\nfunction useLogger() {\n    const ctx = React.useContext(LoggerContext);\n    return ctx;\n}\nexport { LoggerProvider, useLogger };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AACrC,IAAMC,aAAa,GAAGJ,KAAK,CAACK,aAAa,CAAC;EACtCC,GAAG,EAAEL;AACT,CAAC,CAAC;AACF,SAASM,cAAcA,CAAAC,IAAA,EAAmC;EAAA,IAAhCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAAC,eAAA,GAAAF,IAAA,CAAEG,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,KAAK,GAAAA,eAAA;EAClD,IAAMJ,GAAG,GAAGN,KAAK,CAACY,WAAW,CAAC,YAAa;IACvC,IAAID,UAAU,EAAE;MAAA,IAAAE,QAAA;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADcC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;MAAA;MAG9B,CAAAN,QAAA,GAAAO,OAAO,EAACd,GAAG,CAAAe,KAAA,CAAAR,QAAA,GAAC,QAAQ,EAAAS,MAAA,CAAKL,IAAI,EAAC;IAClC;EACJ,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAChB,IAAMY,KAAK,GAAG;IACVjB,GAAG,EAAHA;EACJ,CAAC;EACD,OAAQH,IAAA,CAACC,aAAa,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAd,QAAA,EAAEA;EAAQ,CAAyB,CAAC;AACrF;AACA,SAASgB,SAASA,CAAA,EAAG;EACjB,IAAMC,GAAG,GAAG1B,KAAK,CAAC2B,UAAU,CAACvB,aAAa,CAAC;EAC3C,OAAOsB,GAAG;AACd;AACA,SAASnB,cAAc,EAAEkB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}