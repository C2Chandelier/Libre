{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nvar getLayoutValue = function getLayoutValue(key) {\n  return function (event) {\n    var _event$nativeEvent$la, _event$nativeEvent, _event$nativeEvent$la2;\n    return (_event$nativeEvent$la = event == null ? void 0 : (_event$nativeEvent = event.nativeEvent) == null ? void 0 : (_event$nativeEvent$la2 = _event$nativeEvent.layout) == null ? void 0 : _event$nativeEvent$la2[key]) != null ? _event$nativeEvent$la : 0;\n  };\n};\nexport function useViewDimensions() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$heightOffset = _ref.heightOffset,\n    heightOffset = _ref$heightOffset === void 0 ? 0 : _ref$heightOffset,\n    _ref$widthOffset = _ref.widthOffset,\n    widthOffset = _ref$widthOffset === void 0 ? 0 : _ref$widthOffset;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    height = _React$useState2[0],\n    setHeight = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    width = _React$useState4[0],\n    setWidth = _React$useState4[1];\n  var computeViewDimensions = React.useCallback(function (event) {\n    var h = getLayoutValue('height')(event);\n    var w = getLayoutValue('width')(event);\n    setHeight(h + heightOffset);\n    setWidth(w + widthOffset);\n  }, [heightOffset, widthOffset]);\n  return {\n    computeViewDimensions: computeViewDimensions,\n    height: height,\n    width: width\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}