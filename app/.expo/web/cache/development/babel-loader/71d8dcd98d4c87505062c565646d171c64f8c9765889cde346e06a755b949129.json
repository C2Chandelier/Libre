{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport api from \"../../services/api\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../navbar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { setUser } from \"../../redux/Auth/actions\";\nimport Toast from \"react-native-toast-message\";\nimport Logout from \"../auth/components/logout\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Sidebar from \"../sidebar\";\nimport Articles from \"../articles\";\nimport FindButton from \"./components/findButton\";\nimport { useTailwind } from \"tailwind-rn\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Home() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.Auth.user;\n  });\n  var navigation = useNavigation();\n  var tailwind = useTailwind();\n  var getMessage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield api.get(`/user`, navigation);\n        setData(response);\n      } catch (e) {\n        Toast.show({\n          type: \"error\",\n          text1: `Oups, une erreur est survenue lors de la recuperation des messages`,\n          duration: 3000\n        });\n      }\n    });\n    return function getMessage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getUser = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n      function _fetchData() {\n        _fetchData = _asyncToGenerator(function* () {\n          try {\n            var res = yield api.checkToken();\n            if (!res.ok || !res.user) {\n              api.setToken(null);\n              dispatch(setUser(null));\n              return;\n            }\n            if (res.token) api.setToken(res.token);\n            if (res.user) dispatch(setUser(res.user));\n          } catch (e) {\n            console.log(e);\n          }\n        });\n        return _fetchData.apply(this, arguments);\n      }\n      fetchData();\n    });\n    return function getUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getMessage();\n    getUser();\n  }, []);\n  console.log(user);\n  console.log(data);\n  return _jsxs(View, {\n    style: tailwind(\"flex-1 flex-row\"),\n    children: [_jsx(View, {\n      style: tailwind(\"flex-1 absolute\"),\n      children: _jsx(Articles, {})\n    }), _jsx(FindButton, {\n      style: tailwind(\"absolute top-0 bottom-0\")\n    }), _jsx(Sidebar, {\n      style: tailwind(\"absolute bottom-[140px] right-0\")\n    }), _jsx(Logout, {}), _jsx(Navbar, {})]\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}