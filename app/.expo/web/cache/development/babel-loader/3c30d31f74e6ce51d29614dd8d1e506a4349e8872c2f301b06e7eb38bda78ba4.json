{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport AppContainer from \"./AppContainer\";\nimport invariant from 'fbjs/lib/invariant';\nimport renderLegacy, { hydrateLegacy, render, hydrate } from \"../render\";\nimport StyleSheet from \"../StyleSheet\";\nimport React from 'react';\nexport default function renderApplication(RootComponent, WrapperComponent, callback, options) {\n  var shouldHydrate = options.hydrate,\n    initialProps = options.initialProps,\n    mode = options.mode,\n    rootTag = options.rootTag;\n  var renderFn = shouldHydrate ? mode === 'concurrent' ? hydrate : hydrateLegacy : mode === 'concurrent' ? render : renderLegacy;\n  invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);\n  return renderFn(React.createElement(AppContainer, {\n    WrapperComponent: WrapperComponent,\n    ref: callback,\n    rootTag: rootTag\n  }, React.createElement(RootComponent, initialProps)), rootTag);\n}\nexport function getApplication(RootComponent, initialProps, WrapperComponent) {\n  var element = React.createElement(AppContainer, {\n    WrapperComponent: WrapperComponent,\n    rootTag: {}\n  }, React.createElement(RootComponent, initialProps));\n  var getStyleElement = function getStyleElement(props) {\n    var sheet = StyleSheet.getSheet();\n    return React.createElement(\"style\", _extends({}, props, {\n      dangerouslySetInnerHTML: {\n        __html: sheet.textContent\n      },\n      id: sheet.id\n    }));\n  };\n  return {\n    element: element,\n    getStyleElement: getStyleElement\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}