{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { CodedError, NativeModulesProxy } from 'expo-modules-core';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { AppOwnership, ExecutionEnvironment, UserInterfaceIdiom } from \"./Constants.types\";\nimport ExponentConstants from \"./ExponentConstants\";\nexport { AppOwnership, ExecutionEnvironment, UserInterfaceIdiom };\nif (!ExponentConstants) {\n  console.warn(\"No native ExponentConstants module found, are you sure the expo-constants's module is linked properly?\");\n}\nvar rawManifest = null;\nif (NativeModulesProxy.ExpoUpdates) {\n  var updatesManifest;\n  if (NativeModulesProxy.ExpoUpdates.manifest) {\n    updatesManifest = NativeModulesProxy.ExpoUpdates.manifest;\n  } else if (NativeModulesProxy.ExpoUpdates.manifestString) {\n    updatesManifest = JSON.parse(NativeModulesProxy.ExpoUpdates.manifestString);\n  }\n  if (updatesManifest && Object.keys(updatesManifest).length > 0) {\n    rawManifest = updatesManifest;\n  }\n}\nif (NativeModules.EXDevLauncher) {\n  var devLauncherManifest;\n  if (NativeModules.EXDevLauncher.manifestString) {\n    devLauncherManifest = JSON.parse(NativeModules.EXDevLauncher.manifestString);\n  }\n  if (devLauncherManifest && Object.keys(devLauncherManifest).length > 0) {\n    rawManifest = devLauncherManifest;\n  }\n}\nif (!rawManifest && ExponentConstants && ExponentConstants.manifest) {\n  rawManifest = ExponentConstants.manifest;\n  if (typeof rawManifest === 'string') {\n    rawManifest = JSON.parse(rawManifest);\n  }\n}\nvar _ref = ExponentConstants || {},\n  name = _ref.name,\n  appOwnership = _ref.appOwnership,\n  nativeConstants = _objectWithoutProperties(_ref, [\"name\", \"appOwnership\"]);\nvar warnedAboutManifestField = false;\nvar constants = _objectSpread(_objectSpread({}, nativeConstants), {}, {\n  appOwnership: appOwnership != null ? appOwnership : null\n});\nObject.defineProperties(constants, {\n  installationId: {\n    get: function get() {\n      return nativeConstants.installationId;\n    },\n    enumerable: false\n  },\n  __unsafeNoWarnManifest: {\n    get: function get() {\n      var maybeManifest = getManifest(true);\n      if (!maybeManifest || !isAppManifest(maybeManifest)) {\n        return null;\n      }\n      return maybeManifest;\n    },\n    enumerable: false\n  },\n  __unsafeNoWarnManifest2: {\n    get: function get() {\n      var maybeManifest = getManifest(true);\n      if (!maybeManifest || !isManifest(maybeManifest)) {\n        return null;\n      }\n      return maybeManifest;\n    },\n    enumerable: false\n  },\n  manifest: {\n    get: function get() {\n      if (__DEV__ && !warnedAboutManifestField) {\n        console.warn(`Constants.manifest has been deprecated in favor of Constants.expoConfig.`);\n        warnedAboutManifestField = true;\n      }\n      var maybeManifest = getManifest();\n      if (!maybeManifest || !isAppManifest(maybeManifest)) {\n        return null;\n      }\n      return maybeManifest;\n    },\n    enumerable: true\n  },\n  manifest2: {\n    get: function get() {\n      var maybeManifest = getManifest();\n      if (!maybeManifest || !isManifest(maybeManifest)) {\n        return null;\n      }\n      return maybeManifest;\n    },\n    enumerable: true\n  },\n  expoConfig: {\n    get: function get() {\n      var maybeManifest = getManifest(true);\n      if (!maybeManifest) {\n        return null;\n      }\n      if (isManifest(maybeManifest)) {\n        var _maybeManifest$extra$, _maybeManifest$extra;\n        return (_maybeManifest$extra$ = (_maybeManifest$extra = maybeManifest.extra) == null ? void 0 : _maybeManifest$extra.expoClient) != null ? _maybeManifest$extra$ : null;\n      } else if (isAppManifest(maybeManifest)) {\n        return maybeManifest;\n      }\n      return null;\n    },\n    enumerable: true\n  },\n  expoGoConfig: {\n    get: function get() {\n      var maybeManifest = getManifest(true);\n      if (!maybeManifest) {\n        return null;\n      }\n      if (isManifest(maybeManifest)) {\n        var _maybeManifest$extra$2, _maybeManifest$extra2;\n        return (_maybeManifest$extra$2 = (_maybeManifest$extra2 = maybeManifest.extra) == null ? void 0 : _maybeManifest$extra2.expoGo) != null ? _maybeManifest$extra$2 : null;\n      } else if (isAppManifest(maybeManifest)) {\n        return maybeManifest;\n      }\n      return null;\n    },\n    enumerable: true\n  },\n  easConfig: {\n    get: function get() {\n      var maybeManifest = getManifest(true);\n      if (!maybeManifest) {\n        return null;\n      }\n      if (isManifest(maybeManifest)) {\n        var _maybeManifest$extra$3, _maybeManifest$extra3;\n        return (_maybeManifest$extra$3 = (_maybeManifest$extra3 = maybeManifest.extra) == null ? void 0 : _maybeManifest$extra3.eas) != null ? _maybeManifest$extra$3 : null;\n      } else if (isAppManifest(maybeManifest)) {\n        return maybeManifest;\n      }\n      return null;\n    },\n    enumerable: true\n  },\n  __rawManifest_TEST: {\n    get: function get() {\n      return rawManifest;\n    },\n    set: function set(value) {\n      rawManifest = value;\n    },\n    enumerable: false\n  }\n});\nfunction isAppManifest(manifest) {\n  return !isManifest(manifest);\n}\nfunction isManifest(manifest) {\n  return 'metadata' in manifest;\n}\nfunction getManifest() {\n  var suppressWarning = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  if (!rawManifest) {\n    var invalidManifestType = rawManifest === null ? 'null' : 'undefined';\n    if (nativeConstants.executionEnvironment === ExecutionEnvironment.Bare && Platform.OS !== 'web') {\n      if (!suppressWarning) {\n        console.warn(`Constants.manifest is ${invalidManifestType} because the embedded app.config could not be read. Ensure that you have installed the expo-constants build scripts if you need to read from Constants.manifest.`);\n      }\n    } else if (nativeConstants.executionEnvironment === ExecutionEnvironment.StoreClient || nativeConstants.executionEnvironment === ExecutionEnvironment.Standalone) {\n      throw new CodedError('ERR_CONSTANTS_MANIFEST_UNAVAILABLE', `Constants.manifest is ${invalidManifestType}, must be an object.`);\n    }\n  }\n  return rawManifest;\n}\nexport default constants;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}