{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { AnimatedContainer } from \"./components/AnimatedContainer\";\nimport { ErrorToast } from \"./components/ErrorToast\";\nimport { InfoToast } from \"./components/InfoToast\";\nimport { SuccessToast } from \"./components/SuccessToast\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultToastConfig = {\n  success: function success(props) {\n    return _jsx(SuccessToast, _objectSpread({}, props));\n  },\n  error: function error(props) {\n    return _jsx(ErrorToast, _objectSpread({}, props));\n  },\n  info: function info(props) {\n    return _jsx(InfoToast, _objectSpread({}, props));\n  }\n};\nfunction renderComponent(_ref) {\n  var data = _ref.data,\n    options = _ref.options,\n    config = _ref.config,\n    isVisible = _ref.isVisible,\n    show = _ref.show,\n    hide = _ref.hide;\n  var text1 = data.text1,\n    text2 = data.text2;\n  var type = options.type,\n    onPress = options.onPress,\n    position = options.position,\n    props = options.props;\n  var toastConfig = _objectSpread(_objectSpread({}, defaultToastConfig), config);\n  var ToastComponent = toastConfig[type];\n  if (!ToastComponent) {\n    throw new Error(`Toast type: '${type}' does not exist. You can add it via the 'config' prop on the Toast instance. Learn more: https://github.com/calintamas/react-native-toast-message/blob/master/README.md`);\n  }\n  return ToastComponent({\n    position: position,\n    type: type,\n    isVisible: isVisible,\n    text1: text1,\n    text2: text2,\n    show: show,\n    hide: hide,\n    onPress: onPress,\n    props: props\n  });\n}\nexport function ToastUI(props) {\n  var isVisible = props.isVisible,\n    options = props.options,\n    hide = props.hide;\n  var position = options.position,\n    topOffset = options.topOffset,\n    bottomOffset = options.bottomOffset,\n    keyboardOffset = options.keyboardOffset;\n  return _jsx(AnimatedContainer, {\n    isVisible: isVisible,\n    position: position,\n    topOffset: topOffset,\n    bottomOffset: bottomOffset,\n    keyboardOffset: keyboardOffset,\n    onHide: hide,\n    children: renderComponent(props)\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}