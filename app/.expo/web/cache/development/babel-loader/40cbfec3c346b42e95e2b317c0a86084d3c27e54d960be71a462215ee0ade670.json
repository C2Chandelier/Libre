{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"color\", \"indeterminate\", \"progress\", \"trackColor\", \"style\"];\nimport * as React from 'react';\nimport StyleSheet from \"../StyleSheet\";\nimport View from \"../View\";\nvar ProgressBar = React.forwardRef(function (props, ref) {\n  var _props$color = props.color,\n    color = _props$color === void 0 ? '#1976D2' : _props$color,\n    _props$indeterminate = props.indeterminate,\n    indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n    _props$progress = props.progress,\n    progress = _props$progress === void 0 ? 0 : _props$progress,\n    _props$trackColor = props.trackColor,\n    trackColor = _props$trackColor === void 0 ? 'transparent' : _props$trackColor,\n    style = props.style,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var percentageProgress = progress * 100;\n  var width = indeterminate ? '25%' : percentageProgress + \"%\";\n  return React.createElement(View, _extends({}, other, {\n    \"aria-valuemax\": 100,\n    \"aria-valuemin\": 0,\n    \"aria-valuenow\": indeterminate ? null : percentageProgress,\n    ref: ref,\n    role: \"progressbar\",\n    style: [styles.track, style, {\n      backgroundColor: trackColor\n    }]\n  }), React.createElement(View, {\n    style: [{\n      backgroundColor: color,\n      width: width\n    }, styles.progress, indeterminate && styles.animation]\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\nvar styles = StyleSheet.create({\n  track: {\n    forcedColorAdjust: 'none',\n    height: 5,\n    overflow: 'hidden',\n    userSelect: 'none',\n    zIndex: 0\n  },\n  progress: {\n    forcedColorAdjust: 'none',\n    height: '100%',\n    zIndex: -1\n  },\n  animation: {\n    animationDuration: '1s',\n    animationKeyframes: [{\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '100%': {\n        transform: 'translateX(400%)'\n      }\n    }],\n    animationTimingFunction: 'linear',\n    animationIterationCount: 'infinite'\n  }\n});\nexport default ProgressBar;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}