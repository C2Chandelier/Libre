{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"ItemSeparatorComponent\", \"SectionSeparatorComponent\", \"renderItem\", \"renderSectionFooter\", \"renderSectionHeader\", \"sections\", \"stickySectionHeadersEnabled\"];\nimport View from \"../../../exports/View\";\nimport VirtualizedList from \"../VirtualizedList\";\nimport { keyExtractor as defaultKeyExtractor } from \"../VirtualizeUtils\";\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\nvar VirtualizedSectionList = function (_React$PureComponent) {\n  _inherits(VirtualizedSectionList, _React$PureComponent);\n  var _super = _createSuper(VirtualizedSectionList);\n  function VirtualizedSectionList() {\n    var _this;\n    _classCallCheck(this, VirtualizedSectionList);\n    _this = _super.apply(this, arguments);\n    _this._keyExtractor = function (item, index) {\n      var info = _this._subExtractor(index);\n      return info && info.key || String(index);\n    };\n    _this._convertViewable = function (viewable) {\n      var _info$index;\n      invariant(viewable.index != null, 'Received a broken ViewToken');\n      var info = _this._subExtractor(viewable.index);\n      if (!info) {\n        return null;\n      }\n      var keyExtractorWithNullableIndex = info.section.keyExtractor;\n      var keyExtractorWithNonNullableIndex = _this.props.keyExtractor || defaultKeyExtractor;\n      var key = keyExtractorWithNullableIndex != null ? keyExtractorWithNullableIndex(viewable.item, info.index) : keyExtractorWithNonNullableIndex(viewable.item, (_info$index = info.index) !== null && _info$index !== void 0 ? _info$index : 0);\n      return _objectSpread(_objectSpread({}, viewable), {}, {\n        index: info.index,\n        key: key,\n        section: info.section\n      });\n    };\n    _this._onViewableItemsChanged = function (_ref) {\n      var viewableItems = _ref.viewableItems,\n        changed = _ref.changed;\n      var onViewableItemsChanged = _this.props.onViewableItemsChanged;\n      if (onViewableItemsChanged != null) {\n        onViewableItemsChanged({\n          viewableItems: viewableItems.map(_this._convertViewable, _assertThisInitialized(_this)).filter(Boolean),\n          changed: changed.map(_this._convertViewable, _assertThisInitialized(_this)).filter(Boolean)\n        });\n      }\n    };\n    _this._renderItem = function (listItemCount) {\n      return function (_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        var info = _this._subExtractor(index);\n        if (!info) {\n          return null;\n        }\n        var infoIndex = info.index;\n        if (infoIndex == null) {\n          var section = info.section;\n          if (info.header === true) {\n            var renderSectionHeader = _this.props.renderSectionHeader;\n            return renderSectionHeader ? renderSectionHeader({\n              section: section\n            }) : null;\n          } else {\n            var renderSectionFooter = _this.props.renderSectionFooter;\n            return renderSectionFooter ? renderSectionFooter({\n              section: section\n            }) : null;\n          }\n        } else {\n          var renderItem = info.section.renderItem || _this.props.renderItem;\n          var SeparatorComponent = _this._getSeparatorComponent(index, info, listItemCount);\n          invariant(renderItem, 'no renderItem!');\n          return React.createElement(ItemWithSeparator, {\n            SeparatorComponent: SeparatorComponent,\n            LeadingSeparatorComponent: infoIndex === 0 ? _this.props.SectionSeparatorComponent : undefined,\n            cellKey: info.key,\n            index: infoIndex,\n            item: item,\n            leadingItem: info.leadingItem,\n            leadingSection: info.leadingSection,\n            prevCellKey: (_this._subExtractor(index - 1) || {}).key,\n            setSelfHighlightCallback: _this._setUpdateHighlightFor,\n            setSelfUpdatePropsCallback: _this._setUpdatePropsFor,\n            updateHighlightFor: _this._updateHighlightFor,\n            updatePropsFor: _this._updatePropsFor,\n            renderItem: renderItem,\n            section: info.section,\n            trailingItem: info.trailingItem,\n            trailingSection: info.trailingSection,\n            inverted: !!_this.props.inverted\n          });\n        }\n      };\n    };\n    _this._updatePropsFor = function (cellKey, value) {\n      var updateProps = _this._updatePropsMap[cellKey];\n      if (updateProps != null) {\n        updateProps(value);\n      }\n    };\n    _this._updateHighlightFor = function (cellKey, value) {\n      var updateHighlight = _this._updateHighlightMap[cellKey];\n      if (updateHighlight != null) {\n        updateHighlight(value);\n      }\n    };\n    _this._setUpdateHighlightFor = function (cellKey, updateHighlightFn) {\n      if (updateHighlightFn != null) {\n        _this._updateHighlightMap[cellKey] = updateHighlightFn;\n      } else {\n        delete _this._updateHighlightFor[cellKey];\n      }\n    };\n    _this._setUpdatePropsFor = function (cellKey, updatePropsFn) {\n      if (updatePropsFn != null) {\n        _this._updatePropsMap[cellKey] = updatePropsFn;\n      } else {\n        delete _this._updatePropsMap[cellKey];\n      }\n    };\n    _this._updateHighlightMap = {};\n    _this._updatePropsMap = {};\n    _this._captureRef = function (ref) {\n      _this._listRef = ref;\n    };\n    return _this;\n  }\n  _createClass(VirtualizedSectionList, [{\n    key: \"scrollToLocation\",\n    value: function scrollToLocation(params) {\n      var index = params.itemIndex;\n      for (var i = 0; i < params.sectionIndex; i++) {\n        index += this.props.getItemCount(this.props.sections[i].data) + 2;\n      }\n      var viewOffset = params.viewOffset || 0;\n      if (this._listRef == null) {\n        return;\n      }\n      if (params.itemIndex > 0 && this.props.stickySectionHeadersEnabled) {\n        var frame = this._listRef.__getFrameMetricsApprox(index - params.itemIndex, this._listRef.props);\n        viewOffset += frame.length;\n      }\n      var toIndexParams = _objectSpread(_objectSpread({}, params), {}, {\n        viewOffset: viewOffset,\n        index: index\n      });\n      this._listRef.scrollToIndex(toIndexParams);\n    }\n  }, {\n    key: \"getListRef\",\n    value: function getListRef() {\n      return this._listRef;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        ItemSeparatorComponent = _this$props.ItemSeparatorComponent,\n        SectionSeparatorComponent = _this$props.SectionSeparatorComponent,\n        _renderItem = _this$props.renderItem,\n        renderSectionFooter = _this$props.renderSectionFooter,\n        renderSectionHeader = _this$props.renderSectionHeader,\n        _sections = _this$props.sections,\n        stickySectionHeadersEnabled = _this$props.stickySectionHeadersEnabled,\n        passThroughProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n      var listHeaderOffset = this.props.ListHeaderComponent ? 1 : 0;\n      var stickyHeaderIndices = this.props.stickySectionHeadersEnabled ? [] : undefined;\n      var itemCount = 0;\n      for (var _iterator = _createForOfIteratorHelperLoose(this.props.sections), _step; !(_step = _iterator()).done;) {\n        var section = _step.value;\n        if (stickyHeaderIndices != null) {\n          stickyHeaderIndices.push(itemCount + listHeaderOffset);\n        }\n        itemCount += 2;\n        itemCount += this.props.getItemCount(section.data);\n      }\n      var renderItem = this._renderItem(itemCount);\n      return React.createElement(VirtualizedList, _extends({}, passThroughProps, {\n        keyExtractor: this._keyExtractor,\n        stickyHeaderIndices: stickyHeaderIndices,\n        renderItem: renderItem,\n        data: this.props.sections,\n        getItem: function getItem(sections, index) {\n          return _this2._getItem(_this2.props, sections, index);\n        },\n        getItemCount: function getItemCount() {\n          return itemCount;\n        },\n        onViewableItemsChanged: this.props.onViewableItemsChanged ? this._onViewableItemsChanged : undefined,\n        ref: this._captureRef\n      }));\n    }\n  }, {\n    key: \"_getItem\",\n    value: function _getItem(props, sections, index) {\n      if (!sections) {\n        return null;\n      }\n      var itemIdx = index - 1;\n      for (var i = 0; i < sections.length; i++) {\n        var section = sections[i];\n        var sectionData = section.data;\n        var itemCount = props.getItemCount(sectionData);\n        if (itemIdx === -1 || itemIdx === itemCount) {\n          return section;\n        } else if (itemIdx < itemCount) {\n          return props.getItem(sectionData, itemIdx);\n        } else {\n          itemIdx -= itemCount + 2;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"_subExtractor\",\n    value: function _subExtractor(index) {\n      var itemIndex = index;\n      var _this$props2 = this.props,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount,\n        keyExtractor = _this$props2.keyExtractor,\n        sections = _this$props2.sections;\n      for (var i = 0; i < sections.length; i++) {\n        var section = sections[i];\n        var sectionData = section.data;\n        var key = section.key || String(i);\n        itemIndex -= 1;\n        if (itemIndex >= getItemCount(sectionData) + 1) {\n          itemIndex -= getItemCount(sectionData) + 1;\n        } else if (itemIndex === -1) {\n          return {\n            section: section,\n            key: key + ':header',\n            index: null,\n            header: true,\n            trailingSection: sections[i + 1]\n          };\n        } else if (itemIndex === getItemCount(sectionData)) {\n          return {\n            section: section,\n            key: key + ':footer',\n            index: null,\n            header: false,\n            trailingSection: sections[i + 1]\n          };\n        } else {\n          var extractor = section.keyExtractor || keyExtractor || defaultKeyExtractor;\n          return {\n            section: section,\n            key: key + ':' + extractor(getItem(sectionData, itemIndex), itemIndex),\n            index: itemIndex,\n            leadingItem: getItem(sectionData, itemIndex - 1),\n            leadingSection: sections[i - 1],\n            trailingItem: getItem(sectionData, itemIndex + 1),\n            trailingSection: sections[i + 1]\n          };\n        }\n      }\n    }\n  }, {\n    key: \"_getSeparatorComponent\",\n    value: function _getSeparatorComponent(index, info, listItemCount) {\n      info = info || this._subExtractor(index);\n      if (!info) {\n        return null;\n      }\n      var ItemSeparatorComponent = info.section.ItemSeparatorComponent || this.props.ItemSeparatorComponent;\n      var SectionSeparatorComponent = this.props.SectionSeparatorComponent;\n      var isLastItemInList = index === listItemCount - 1;\n      var isLastItemInSection = info.index === this.props.getItemCount(info.section.data) - 1;\n      if (SectionSeparatorComponent && isLastItemInSection) {\n        return SectionSeparatorComponent;\n      }\n      if (ItemSeparatorComponent && !isLastItemInSection && !isLastItemInList) {\n        return ItemSeparatorComponent;\n      }\n      return null;\n    }\n  }]);\n  return VirtualizedSectionList;\n}(React.PureComponent);\nfunction ItemWithSeparator(props) {\n  var LeadingSeparatorComponent = props.LeadingSeparatorComponent,\n    SeparatorComponent = props.SeparatorComponent,\n    cellKey = props.cellKey,\n    prevCellKey = props.prevCellKey,\n    setSelfHighlightCallback = props.setSelfHighlightCallback,\n    updateHighlightFor = props.updateHighlightFor,\n    setSelfUpdatePropsCallback = props.setSelfUpdatePropsCallback,\n    updatePropsFor = props.updatePropsFor,\n    item = props.item,\n    index = props.index,\n    section = props.section,\n    inverted = props.inverted;\n  var _React$useState = React.useState(false),\n    leadingSeparatorHiglighted = _React$useState[0],\n    setLeadingSeparatorHighlighted = _React$useState[1];\n  var _React$useState2 = React.useState(false),\n    separatorHighlighted = _React$useState2[0],\n    setSeparatorHighlighted = _React$useState2[1];\n  var _React$useState3 = React.useState({\n      leadingItem: props.leadingItem,\n      leadingSection: props.leadingSection,\n      section: props.section,\n      trailingItem: props.item,\n      trailingSection: props.trailingSection\n    }),\n    leadingSeparatorProps = _React$useState3[0],\n    setLeadingSeparatorProps = _React$useState3[1];\n  var _React$useState4 = React.useState({\n      leadingItem: props.item,\n      leadingSection: props.leadingSection,\n      section: props.section,\n      trailingItem: props.trailingItem,\n      trailingSection: props.trailingSection\n    }),\n    separatorProps = _React$useState4[0],\n    setSeparatorProps = _React$useState4[1];\n  React.useEffect(function () {\n    setSelfHighlightCallback(cellKey, setSeparatorHighlighted);\n    setSelfUpdatePropsCallback(cellKey, setSeparatorProps);\n    return function () {\n      setSelfUpdatePropsCallback(cellKey, null);\n      setSelfHighlightCallback(cellKey, null);\n    };\n  }, [cellKey, setSelfHighlightCallback, setSeparatorProps, setSelfUpdatePropsCallback]);\n  var separators = {\n    highlight: function highlight() {\n      setLeadingSeparatorHighlighted(true);\n      setSeparatorHighlighted(true);\n      if (prevCellKey != null) {\n        updateHighlightFor(prevCellKey, true);\n      }\n    },\n    unhighlight: function unhighlight() {\n      setLeadingSeparatorHighlighted(false);\n      setSeparatorHighlighted(false);\n      if (prevCellKey != null) {\n        updateHighlightFor(prevCellKey, false);\n      }\n    },\n    updateProps: function updateProps(select, newProps) {\n      if (select === 'leading') {\n        if (LeadingSeparatorComponent != null) {\n          setLeadingSeparatorProps(_objectSpread(_objectSpread({}, leadingSeparatorProps), newProps));\n        } else if (prevCellKey != null) {\n          updatePropsFor(prevCellKey, _objectSpread(_objectSpread({}, leadingSeparatorProps), newProps));\n        }\n      } else if (select === 'trailing' && SeparatorComponent != null) {\n        setSeparatorProps(_objectSpread(_objectSpread({}, separatorProps), newProps));\n      }\n    }\n  };\n  var element = props.renderItem({\n    item: item,\n    index: index,\n    section: section,\n    separators: separators\n  });\n  var leadingSeparator = LeadingSeparatorComponent != null && React.createElement(LeadingSeparatorComponent, _extends({\n    highlighted: leadingSeparatorHiglighted\n  }, leadingSeparatorProps));\n  var separator = SeparatorComponent != null && React.createElement(SeparatorComponent, _extends({\n    highlighted: separatorHighlighted\n  }, separatorProps));\n  return leadingSeparator || separator ? React.createElement(View, null, inverted === false ? leadingSeparator : separator, element, inverted === false ? separator : leadingSeparator) : element;\n}\nexport default VirtualizedSectionList;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}