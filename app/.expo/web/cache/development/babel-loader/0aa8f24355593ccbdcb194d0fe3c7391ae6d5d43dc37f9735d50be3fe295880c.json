{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPressIn\", \"onPressOut\", \"android_ripple\", \"pressColor\", \"pressOpacity\", \"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nvar AnimatedPressable = Animated.createAnimatedComponent(Pressable);\nvar ANDROID_VERSION_LOLLIPOP = 21;\nvar ANDROID_SUPPORTS_RIPPLE = Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\nexport default function PlatformPressable(_ref) {\n  var onPressIn = _ref.onPressIn,\n    onPressOut = _ref.onPressOut,\n    android_ripple = _ref.android_ripple,\n    pressColor = _ref.pressColor,\n    _ref$pressOpacity = _ref.pressOpacity,\n    pressOpacity = _ref$pressOpacity === void 0 ? 0.3 : _ref$pressOpacity,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useTheme = useTheme(),\n    dark = _useTheme.dark;\n  var _React$useState = React.useState(function () {\n      return new Animated.Value(1);\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    opacity = _React$useState2[0];\n  var animateTo = function animateTo(toValue, duration) {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n    Animated.timing(opacity, {\n      toValue: toValue,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true\n    }).start();\n  };\n  var handlePressIn = function handlePressIn(e) {\n    animateTo(pressOpacity, 0);\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(e);\n  };\n  var handlePressOut = function handlePressOut(e) {\n    animateTo(1, 200);\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(e);\n  };\n  return React.createElement(AnimatedPressable, _extends({\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    android_ripple: ANDROID_SUPPORTS_RIPPLE ? _objectSpread({\n      color: pressColor !== undefined ? pressColor : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)'\n    }, android_ripple) : undefined,\n    style: [{\n      opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1\n    }, style]\n  }, rest));\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}