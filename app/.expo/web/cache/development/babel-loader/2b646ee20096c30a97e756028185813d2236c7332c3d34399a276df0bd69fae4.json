{"ast":null,"code":"import React from 'react';\nimport { noop } from \"../utils/func\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LoggerContext = React.createContext({\n  log: noop\n});\nfunction LoggerProvider(_ref) {\n  var children = _ref.children,\n    _ref$enableLogs = _ref.enableLogs,\n    enableLogs = _ref$enableLogs === void 0 ? false : _ref$enableLogs;\n  var log = React.useCallback(function () {\n    if (enableLogs) {\n      var _console;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_console = console).log.apply(_console, ['Toast:'].concat(args));\n    }\n  }, [enableLogs]);\n  var value = {\n    log: log\n  };\n  return _jsx(LoggerContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nfunction useLogger() {\n  var ctx = React.useContext(LoggerContext);\n  return ctx;\n}\nexport { LoggerProvider, useLogger };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}