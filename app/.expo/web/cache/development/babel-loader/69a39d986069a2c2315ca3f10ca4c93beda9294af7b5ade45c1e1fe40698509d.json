{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"behavior\", \"contentContainerStyle\", \"keyboardVerticalOffset\"];\nimport * as React from 'react';\nimport View from \"../View\";\nvar KeyboardAvoidingView = function (_React$Component) {\n  _inherits(KeyboardAvoidingView, _React$Component);\n  var _super = _createSuper(KeyboardAvoidingView);\n  function KeyboardAvoidingView() {\n    var _this;\n    _classCallCheck(this, KeyboardAvoidingView);\n    _this = _super.apply(this, arguments);\n    _this.frame = null;\n    _this.onLayout = function (event) {\n      _this.frame = event.nativeEvent.layout;\n    };\n    return _this;\n  }\n  _createClass(KeyboardAvoidingView, [{\n    key: \"relativeKeyboardHeight\",\n    value: function relativeKeyboardHeight(keyboardFrame) {\n      var frame = this.frame;\n      if (!frame || !keyboardFrame) {\n        return 0;\n      }\n      var keyboardY = keyboardFrame.screenY - (this.props.keyboardVerticalOffset || 0);\n      return Math.max(frame.y + frame.height - keyboardY, 0);\n    }\n  }, {\n    key: \"onKeyboardChange\",\n    value: function onKeyboardChange(event) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        behavior = _this$props.behavior,\n        contentContainerStyle = _this$props.contentContainerStyle,\n        keyboardVerticalOffset = _this$props.keyboardVerticalOffset,\n        rest = _objectWithoutPropertiesLoose(_this$props, _excluded);\n      return React.createElement(View, _extends({\n        onLayout: this.onLayout\n      }, rest));\n    }\n  }]);\n  return KeyboardAvoidingView;\n}(React.Component);\nexport default KeyboardAvoidingView;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}