{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport AnimatedValue from \"./AnimatedValue\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1;\nvar AnimatedValueXY = function (_AnimatedWithChildren) {\n  _inherits(AnimatedValueXY, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedValueXY);\n  function AnimatedValueXY(valueIn) {\n    var _this;\n    _classCallCheck(this, AnimatedValueXY);\n    _this = _super.call(this);\n    var value = valueIn || {\n      x: 0,\n      y: 0\n    };\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      _this.x = new AnimatedValue(value.x);\n      _this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initialized with an object of numbers or ' + 'AnimatedValues.');\n      _this.x = value.x;\n      _this.y = value.y;\n    }\n    _this._listeners = {};\n    return _this;\n  }\n  _createClass(AnimatedValueXY, [{\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.x.setValue(value.x);\n      this.y.setValue(value.y);\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this.x.setOffset(offset.x);\n      this.y.setOffset(offset.y);\n    }\n  }, {\n    key: \"flattenOffset\",\n    value: function flattenOffset() {\n      this.x.flattenOffset();\n      this.y.flattenOffset();\n    }\n  }, {\n    key: \"extractOffset\",\n    value: function extractOffset() {\n      this.x.extractOffset();\n      this.y.extractOffset();\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return {\n        x: this.x.__getValue(),\n        y: this.y.__getValue()\n      };\n    }\n  }, {\n    key: \"resetAnimation\",\n    value: function resetAnimation(callback) {\n      this.x.resetAnimation();\n      this.y.resetAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"stopAnimation\",\n    value: function stopAnimation(callback) {\n      this.x.stopAnimation();\n      this.y.stopAnimation();\n      callback && callback(this.__getValue());\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(callback) {\n      var _this2 = this;\n      var id = String(_uniqueId++);\n      var jointCallback = function jointCallback(_ref) {\n        var number = _ref.value;\n        callback(_this2.__getValue());\n      };\n      this._listeners[id] = {\n        x: this.x.addListener(jointCallback),\n        y: this.y.addListener(jointCallback)\n      };\n      return id;\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(id) {\n      this.x.removeListener(this._listeners[id].x);\n      this.y.removeListener(this._listeners[id].y);\n      delete this._listeners[id];\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners() {\n      this.x.removeAllListeners();\n      this.y.removeAllListeners();\n      this._listeners = {};\n    }\n  }, {\n    key: \"getLayout\",\n    value: function getLayout() {\n      return {\n        left: this.x,\n        top: this.y\n      };\n    }\n  }, {\n    key: \"getTranslateTransform\",\n    value: function getTranslateTransform() {\n      return [{\n        translateX: this.x\n      }, {\n        translateY: this.y\n      }];\n    }\n  }]);\n  return AnimatedValueXY;\n}(AnimatedWithChildren);\nexport default AnimatedValueXY;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}